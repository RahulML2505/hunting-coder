import Head from 'next/head';
// import Image from 'next/image';
import Link from 'next/link';
import React, { useState } from 'react';
import fs from 'fs';
import styles from '../styles/Home.module.css';

const Home = (props) => {
  const [blogs,] = useState(props.blogs);
  return (
    <div className={styles.container}>
      <style jsx>
        {`
          h2 {
            font-size: 38px;
          }
          h3 {
            font-size: 28px;
          }
        `}
      </style>
      <Head>
        <title>Hunting Coders</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="keywords" content="nextjs, hunting coder, hunting coder blog" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* <Script src="/sc.js" strategy="lazyOnload"></Script> */}

      <main className={styles.main}>
        <h1 className={styles.title}>
          <span className="greating-span dummy">Welcome to</span>{' '}
          <a href="https://nextjs.org">Hunting Coders!</a>
        </h1>

        {/* <Image src="/coder.jpg" alt="" width={237} height={158} /> */}
        <div className={styles['image-wrap']}>
          {/* <Image src="/coder.jpg" className={styles['home-coder-img']} width={435} height={290} /> */}
          <img src="/coder.jpg" className={styles['home-coder-img']} width={435} height={290} />
        </div>

        <p className={styles.description}>
          A blog for hunting coders by a hunting coder
        </p>

        <div className="blogs">
          <h2>Latest Blogs</h2>
          {blogs.map((blog, idx) =>
            <div className={styles.blogItem} key={`blog_${idx}`}>
              <Link href={`/blogpost/${blog.slug}`}>
                <h3 className={`${styles.link} ${styles['blogItem-h']}`}>{blog.title}</h3>
              </Link>
              <p>
                {String(blog.metadesc).slice(0, 54)}{'...'}
                <Link href={`/blogpost/${blog.slug}`}><span className={styles.readmore}>readmore</span></Link>
              </p>
            </div>
          )}
        </div>

      </main>

      <footer className={styles.footer}></footer>
    </div>
  );
};

// const renderBlogs = async () => {
//   let response = await fetch(`${process.env.HOST_URL}/api/blogs/`);
//   let data = await response.json();
//   return data;
// };

const renderBlogs = async () => {
  let
    dirname = process.env.BLOG_DATA_FOLDER,
    files_str = await fs.promises.readdir(dirname),
    filenames = Array(files_str)[0],
    file_extension = '.json',
    blogs = [];

  for (const filename of filenames) {
    if (filename.includes(file_extension)) {
      let content = await fs.promises.readFile(`${dirname}/${filename}`, 'utf-8');
      let data = JSON.parse(content);
      blogs.push(
        {
          slug: filename.replace(file_extension, ''),
          ...data
        }
      );
    }
  }
  return blogs;
};

// export const getServerSideProps = async (context) => {
export const getStaticProps = async (context) => {
  return {
    props: {
      blogs: await renderBlogs(),
    },
  }
};

export default Home;
